{"ast":null,"code":"var _jsxFileName = \"/Users/ethanbernstein/Documents/websiteSucksSushi/client/src/components/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './VideoPlayer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoUrl = '/sample-sonar.mp4',\n  thumbnail = null,\n  isOpen = false,\n  onClose = null,\n  showBoundingBoxes = false\n}) {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  // Use external control if provided, otherwise internal state\n  const modalOpen = onClose !== null ? isOpen : isPlaying;\n  const handleOpen = () => {\n    if (onClose === null) {\n      setIsPlaying(true);\n    }\n  };\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    } else {\n      setIsPlaying(false);\n    }\n  };\n\n  // Mock bounding boxes - replace with real ML model output\n  const boundingBoxes = showBoundingBoxes ? [{\n    x: 45,\n    y: 30,\n    width: 15,\n    height: 20,\n    confidence: 0.92,\n    label: 'Fish'\n  }, {\n    x: 65,\n    y: 55,\n    width: 12,\n    height: 15,\n    confidence: 0.87,\n    label: 'Fish'\n  }] : [];\n\n  // Only render modal if external control or internal playing state\n  if (onClose !== null && !isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [onClose === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player-thumbnail\",\n      onClick: handleOpen,\n      children: thumbnail ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: \"Sonar preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"play-icon\",\n          children: \"\\u25B6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to view sonar feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-modal-overlay\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"video-close-btn\",\n          onClick: handleClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            src: videoUrl,\n            controls: true,\n            autoPlay: true,\n            loop: true,\n            className: \"sonar-video\",\n            children: \"Your browser does not support video playback.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), showBoundingBoxes && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bounding-boxes\",\n            children: boundingBoxes.map((box, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bounding-box\",\n              style: {\n                left: `${box.x}%`,\n                top: `${box.y}%`,\n                width: `${box.width}%`,\n                height: `${box.height}%`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box-label\",\n                children: [box.label, \" \", (box.confidence * 100).toFixed(0), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), showBoundingBoxes && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detection-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"detection-badge\",\n            children: [\"\\uD83D\\uDC1F \", boundingBoxes.length, \" Fish Detected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-badge\",\n            children: \"ML Model Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(VideoPlayer, \"vnxKdSPA0nuJkEd4F4tBCiZQjj0=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","videoUrl","thumbnail","isOpen","onClose","showBoundingBoxes","_s","isPlaying","setIsPlaying","videoRef","modalOpen","handleOpen","handleClose","boundingBoxes","x","y","width","height","confidence","label","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","ref","controls","autoPlay","loop","map","box","idx","style","left","top","toFixed","length","_c","$RefreshReg$"],"sources":["/Users/ethanbernstein/Documents/websiteSucksSushi/client/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './VideoPlayer.css';\n\nfunction VideoPlayer({\n  videoUrl = '/sample-sonar.mp4',\n  thumbnail = null,\n  isOpen = false,\n  onClose = null,\n  showBoundingBoxes = false\n}) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  // Use external control if provided, otherwise internal state\n  const modalOpen = onClose !== null ? isOpen : isPlaying;\n\n  const handleOpen = () => {\n    if (onClose === null) {\n      setIsPlaying(true);\n    }\n  };\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    } else {\n      setIsPlaying(false);\n    }\n  };\n\n  // Mock bounding boxes - replace with real ML model output\n  const boundingBoxes = showBoundingBoxes ? [\n    { x: 45, y: 30, width: 15, height: 20, confidence: 0.92, label: 'Fish' },\n    { x: 65, y: 55, width: 12, height: 15, confidence: 0.87, label: 'Fish' }\n  ] : [];\n\n  // Only render modal if external control or internal playing state\n  if (onClose !== null && !isOpen) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Thumbnail/Placeholder - only show if no external control */}\n      {onClose === null && (\n        <div className=\"video-player-thumbnail\" onClick={handleOpen}>\n          {thumbnail ? (\n            <img src={thumbnail} alt=\"Sonar preview\" />\n          ) : (\n            <div className=\"video-placeholder\">\n              <div className=\"play-icon\">▶</div>\n              <p>Click to view sonar feed</p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Video Modal */}\n      {modalOpen && (\n        <div className=\"video-modal-overlay\" onClick={handleClose}>\n          <div className=\"video-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <button className=\"video-close-btn\" onClick={handleClose}>✕</button>\n\n            <div className=\"video-container\">\n              <video\n                ref={videoRef}\n                src={videoUrl}\n                controls\n                autoPlay\n                loop\n                className=\"sonar-video\"\n              >\n                Your browser does not support video playback.\n              </video>\n\n              {/* Bounding Box Overlays */}\n              {showBoundingBoxes && (\n                <div className=\"bounding-boxes\">\n                  {boundingBoxes.map((box, idx) => (\n                    <div\n                      key={idx}\n                      className=\"bounding-box\"\n                      style={{\n                        left: `${box.x}%`,\n                        top: `${box.y}%`,\n                        width: `${box.width}%`,\n                        height: `${box.height}%`\n                      }}\n                    >\n                      <div className=\"box-label\">\n                        {box.label} {(box.confidence * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {showBoundingBoxes && (\n              <div className=\"detection-info\">\n                <span className=\"detection-badge\">🐟 {boundingBoxes.length} Fish Detected</span>\n                <span className=\"ml-badge\">ML Model Active</span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}