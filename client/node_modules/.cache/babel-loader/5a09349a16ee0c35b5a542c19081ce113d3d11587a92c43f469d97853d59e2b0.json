{"ast":null,"code":"var _jsxFileName = \"/Users/ethanbernstein/Documents/websiteSucksSushi/client/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  isOpen,\n  onClose,\n  sensorData,\n  anomalies,\n  embedded = false\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: 'Hello! I\\'m your AI maintenance assistant. I can help diagnose issues and provide maintenance recommendations based on your boat\\'s sensor data.',\n    timestamp: Date.now()\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: Date.now()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    // Placeholder for backend chat API\n    // In the future, this will call your LLM model with context\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input,\n          context: {\n            sensorData,\n            anomalies\n          }\n        })\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response || 'Backend model integration pending. This is a placeholder response.',\n        timestamp: Date.now()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      // Fallback placeholder response when backend not connected\n      const assistantMessage = {\n        role: 'assistant',\n        content: `I understand you're asking about: \"${input}\". The LLM backend is not yet connected. Once integrated, I'll provide context-aware maintenance advice based on your current sensor readings.`,\n        timestamp: Date.now()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  if (!isOpen && !embedded) return null;\n  const chatContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: embedded ? \"chat-window embedded\" : \"chat-window\",\n    onClick: e => embedded ? null : e.stopPropagation(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat-icon-text\",\n          children: \"MAINT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Maintenance Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), \"AI-Powered\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), !embedded && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-close-btn\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), anomalies && anomalies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-context-alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert-symbol\",\n        children: \"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [anomalies.length, \" active anomaly detected - Ask me about it!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.role}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-timestamp\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message assistant\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chat-input\",\n        placeholder: \"Ask about maintenance, diagnostics, or sensor readings...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        rows: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-send-btn\",\n        onClick: handleSend,\n        disabled: !input.trim() || isLoading,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n  if (embedded) {\n    return chatContent;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-modal-overlay\",\n    onClick: onClose,\n    children: chatContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"M+HkgyPQ544g2Upq8NAi0OahqOc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatWindow","isOpen","onClose","sensorData","anomalies","embedded","_s","messages","setMessages","role","content","timestamp","Date","now","input","setInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","context","data","json","assistantMessage","error","handleKeyPress","e","key","shiftKey","preventDefault","chatContent","className","onClick","stopPropagation","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","idx","toLocaleTimeString","ref","placeholder","value","onChange","target","onKeyPress","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/ethanbernstein/Documents/websiteSucksSushi/client/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ChatWindow.css';\n\nfunction ChatWindow({ isOpen, onClose, sensorData, anomalies, embedded = false }) {\n  const [messages, setMessages] = useState([\n    {\n      role: 'assistant',\n      content: 'Hello! I\\'m your AI maintenance assistant. I can help diagnose issues and provide maintenance recommendations based on your boat\\'s sensor data.',\n      timestamp: Date.now()\n    }\n  ]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: Date.now()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    // Placeholder for backend chat API\n    // In the future, this will call your LLM model with context\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message: input,\n          context: {\n            sensorData,\n            anomalies\n          }\n        })\n      });\n\n      const data = await response.json();\n\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response || 'Backend model integration pending. This is a placeholder response.',\n        timestamp: Date.now()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      // Fallback placeholder response when backend not connected\n      const assistantMessage = {\n        role: 'assistant',\n        content: `I understand you're asking about: \"${input}\". The LLM backend is not yet connected. Once integrated, I'll provide context-aware maintenance advice based on your current sensor readings.`,\n        timestamp: Date.now()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  if (!isOpen && !embedded) return null;\n\n  const chatContent = (\n    <div className={embedded ? \"chat-window embedded\" : \"chat-window\"} onClick={(e) => embedded ? null : e.stopPropagation()}>\n        {/* Header */}\n        <div className=\"chat-header\">\n          <div className=\"chat-header-left\">\n            <span className=\"chat-icon-text\">MAINT</span>\n            <div>\n              <h3>Maintenance Assistant</h3>\n              <p className=\"chat-status\">\n                <span className=\"status-indicator\"></span>\n                AI-Powered\n              </p>\n            </div>\n          </div>\n          {!embedded && <button className=\"chat-close-btn\" onClick={onClose}>×</button>}\n        </div>\n\n        {/* Context Info */}\n        {anomalies && anomalies.length > 0 && (\n          <div className=\"chat-context-alert\">\n            <span className=\"alert-symbol\">!</span>\n            <span>{anomalies.length} active anomaly detected - Ask me about it!</span>\n          </div>\n        )}\n\n        {/* Messages */}\n        <div className=\"chat-messages\">\n          {messages.map((msg, idx) => (\n            <div key={idx} className={`chat-message ${msg.role}`}>\n              <div className=\"message-content\">\n                {msg.content}\n              </div>\n              <div className=\"message-timestamp\">\n                {new Date(msg.timestamp).toLocaleTimeString()}\n              </div>\n            </div>\n          ))}\n          {isLoading && (\n            <div className=\"chat-message assistant\">\n              <div className=\"message-content\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n\n        {/* Input */}\n        <div className=\"chat-input-container\">\n          <textarea\n            className=\"chat-input\"\n            placeholder=\"Ask about maintenance, diagnostics, or sensor readings...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={handleKeyPress}\n            rows=\"2\"\n          />\n          <button\n            className=\"chat-send-btn\"\n            onClick={handleSend}\n            disabled={!input.trim() || isLoading}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n  );\n\n  if (embedded) {\n    return chatContent;\n  }\n\n  return (\n    <div className=\"chat-modal-overlay\" onClick={onClose}>\n      {chatContent}\n    </div>\n  );\n}\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}